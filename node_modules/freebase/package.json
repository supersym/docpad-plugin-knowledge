{
  "author": {
    "name": "Spencer Kelly",
    "email": "spencerwater@gmail.com",
    "url": "http://spencerwaterbed.com"
  },
  "name": "freebase",
  "description": "a very masculine way to work with data from freebase.com",
  "version": "2.1.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/spencermountain/Freebase-nodejs.git"
  },
  "main": "freebase.js",
  "engines": [
    "node >= 0.3.6"
  ],
  "dependencies": {
    "request": "2.12.0",
    "async": "0.1.22",
    "underscore": "1.4.2"
  },
  "readme": "#Freebase\n[Freebase](http://freebase.com/) is a large human-curated database\n\n[Nodejs](http://nodejs.org/) is the most efficient software platform in the world.\n\nthis is a library to make the two sing along\n\n\n## Installation\n\n    npm install freebase\n\nthen make a .js file with:\n\n    var freebase=require('freebase');\n    freebase.description('tom cruise', [options], callback)\n\n## Showing off\n\nit's built to be as flexible as possible:\n\n    freebase.sentence(\"/en/thom_yorke\")\n    freebase.sentence(\"thom yorke\")\n    freebase.sentence(\"http://www.myspace.com/thomyorkemusic\")\n    freebase.sentence({\"name\":\"thom yorke\", \"id\":\"/en/thom_yorke\"})\nthese all return the same thing.\n\nyou can also do this, which is pretty clever i'd say:\n\n    freebase.sentence(\"meatloaf\", {type:\"/food/food\"}, console.log)\n\nyou can also do this, which chunks asynchronous requests into groups of 10 for speed.\n\n    freebase.sentence([\"johny greenwood\", \"thom yorke\", \"marvin gaye\"], {}, console.log)\n\nyou can also do this, which is handy when you're hacking-away in the console:\n\n    freebase.sentences(\"thom yorke\")\n    freebase.get_sentences(\"thom yorke\")\n\n\n## Very masculine parts\n\n### Freebase methods\n\nBooks about planets:\n\n    var query=[{\n                \"type\":  \"/astronomy/planet\",\n                \"name\":  null,\n                \"/book/book_subject/works\": []\n               }]​\n    freebase.mqlread(query, {}, function(r){console.log(r)})\n\nEvery Tornado, ever\n\n      query=[{\n              \"type\":\"/base/disaster2/tornado\",\n              \"name\":null\n             }]\n      freebase.paginate(query, {max:400}, console.log)\n\nHockey players named 'doug'\n\n    freebase.search(\"doug\",{type: \"/ice_hockey/hockey_player\"}, console.log)\n\n\n### Sugar\n\nWhich pronoun to use for this topic\n\n    freebase.pronoun(\"banana\", {}, console.log)\n       -> \"they\"\n    freebase.pronoun([\"prince harry\", \"miranda july\"], {}, console.log)\n       -> [\"he\", \"she\"]\n    freebase.pronoun(\"washing machine\", {}, console.log)\n       -> \"they\"\n    freebase.pronoun(\"cheddar\", {type:\"/food/food\"}, console.log)\n       -> \"it\"\n\nSimilar topics to this topic\n\n    freebase.related(\"toronto\", {}, function(r){\n        r.forEach(function(v){return console.log(v.name)})\n      })\n     ->   Toronto FC\n          Toronto Maple Leafs\n          Toronto Argonauts\n          North York\n          Toronto Marlies\n\nA common-sense search that only matches when confident:\n\n    freebase.lookup(\"tom green\", {}, console.log)\n    freebase.lookup([\"toronto\",\"suddenly susan\"], {}, console.log)\n\nsameAs weblinks for a topic, or url\n\n    freebase.same_as_links(\"toronto\", {}, console.log)\n    freebase.same_as_links(\"http://toronto.ca\", {}, console.log)\n\nThe first sentence from a wikipedia article:\n\n    freebase.sentence(\"tokyo\", {}, console.log)\n\nGraph-type queries on topics, dancing over tough values and mediators:\n\n      freebase.graph(\"ubuntu\", {}, console.log )\n      freebase.outgoing(\"ubuntu\", {}, console.log )\n      freebase.incoming(\"ubuntu\", {}, console.log )\n\nA list of topics in a collection:\n\n     freebase.list(\"earthquakes\", {}, console.log)\n\nThe first paragraph of something's wikipedia article:\n\n     freebase.description(\"mike myers\", {}, console.log)\n     freebase.description(\"http://myspace.com/u2\", {}, console.log)\n\nTranslated names for topics:\n\n     freebase.translate(\"radiohead\", {lang:\"/lang/ko\"}, console.log)// 라디오헤드\n\nThe most accurate, or notable type for a topic:\n\n     freebase.notable(\"canada\", {}, console.log) // {id:\"/location/country\", name:\"Country\"}\n\nGet the wikipedia link for a topic\n\n     freebase.wikipedia_link(\"tony hawk\", {}, console.log) //http://en.wikipedia/wiki/Tony_Hawk\n\nEncode a string for inclusion in a freebase id/key/whatever\n\n    freebase.mql_encode(\"Aarno Yrjö-Koskinen\") //\"Aarno_Yrj$00F6-Koskinen\"\n\n\n## poo\nCreative Commons, MIT\n",
  "readmeFilename": "README.markdown",
  "_id": "freebase@2.1.0",
  "_from": "freebase@2.1.x"
}
